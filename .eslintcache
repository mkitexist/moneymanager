[{"C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\index.js":"1","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\App.js":"2","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\weeklyExpense\\weeklyCashflow.js":"3","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\datecomponent.js":"4","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\monthlyExpense\\monthlyCashflow.js":"5","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\netCashFlow\\netCashflow.js":"6","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\cardcomponent.js":"7","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\index.js":"8","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\App.js":"9","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\cardcomponent.js":"10","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\datecomponent.js":"11","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\weeklyExpense\\weeklyCashflow.js":"12","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\monthlyExpense\\monthlyCashflow.js":"13","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\netCashFlow\\netCashflow.js":"14"},{"size":168,"mtime":1612430568918,"results":"15","hashOfConfig":"16"},{"size":4757,"mtime":1612583717927,"results":"17","hashOfConfig":"16"},{"size":3959,"mtime":1612529875843,"results":"18","hashOfConfig":"16"},{"size":0,"mtime":1612462143493,"results":"19","hashOfConfig":"16"},{"size":4098,"mtime":1612519366903,"results":"20","hashOfConfig":"16"},{"size":4730,"mtime":1612548129522,"results":"21","hashOfConfig":"16"},{"size":500,"mtime":1612531557468,"results":"22","hashOfConfig":"16"},{"size":168,"mtime":1612430568918,"results":"23","hashOfConfig":"24"},{"size":4767,"mtime":1612690759060,"results":"25","hashOfConfig":"24"},{"size":500,"mtime":1612531557468,"results":"26","hashOfConfig":"24"},{"size":0,"mtime":1612462143493,"results":"27","hashOfConfig":"24"},{"size":3968,"mtime":1612688500514,"results":"28","hashOfConfig":"24"},{"size":4107,"mtime":1612689079234,"results":"29","hashOfConfig":"24"},{"size":4739,"mtime":1612688511104,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1hzcr00",{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1hf9hof",{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},"C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\index.js",[],["69","70"],"C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\App.js",["71","72","73","74","75"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport MaterialUIPickers from \"./datecomponent\";\nimport EnhancedTable from \"./weeklyExpense/weeklyCashflow\";\nimport CustomizedTabless from \"./weeklyExpense/weeklyCashflow\";\nimport Monthly from \"./monthlyExpense/monthlyCashflow\";\nimport CustomizedTables from \"./monthlyExpense/monthlyCashflow\";\nimport CustomizedTablesss from \"./netCashFlow/netCashflow\";\nimport Cardcomponent from \"./cardcomponent\";\nimport swal from \"sweetalert\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  useParams,\n  Link,\n} from \"react-router-dom\";\n\nfunction App() {\n  let movie = null;\n  // console.log(datee);\n  // validd();\n\n  let [incomedate, setIncomeDate] = useState(\"\");\n  let [income, setIncome] = useState(\"\");\n  // const [expensedate, setExpenseDate] = useState(\"\");\n  let [expense, setExpense] = useState(\"\");\n  // const [review, setReview] = useState(\"\");\n  const [incomeList, setIncomelist] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3005/api/moneyManager/getmoney\").then(\n      (response) => {\n        console.log(response.data);\n        setIncomelist(response.data);\n      }\n    );\n  }, []);\n  movie = incomeList.map((val) => {\n    console.log(val.date, +val.income, +val.expense);\n    // if (incomeList.length <= 7) {\n    return (\n      <div>\n        <table>\n          <tr>\n            <td>{val.id}</td>\n            <td>{val.income}</td>\n            <td>{val.expense}</td>\n            <td>{val.date}</td>\n          </tr>\n        </table>\n\n        {/* id:{val.id}, date:{val.date}, income:= {val.income},expense:\n        {val.expense} */}\n      </div>\n    );\n    // }\n  });\n  const submitReview = () => {\n    Axios.post(\"http://localhost:3005/api/moneyManager/postmoney\", {\n      date: incomedate,\n      income: income,\n      expense: expense,\n    }).then(() => {\n      swal(\"Good job!\", \"You added!\", \"success\");\n      // alert(\"sucess\");\n    });\n    setTimeout(() => {\n      window.location.reload();\n    }, 600);\n  };\n  let p =\n    expense.length && income.length && incomedate.length > 1 ? false : true;\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <div className=\"head\">\n            {/* <h1>hi im in head</h1> */}\n            <h1>MONEY MANAGEMENT MADE EASY</h1>\n          </div>\n          <div className=\"App container\">\n            <div className=\"form\">\n              <label className=\"label\">yyyy-mm-dd</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                // placeholder=\"2021-01-2\"\n                // onFocus=\"do enter something\"\n                onChange={(e) => {\n                  // console.log(e);\n\n                  setIncomeDate(e.target.value);\n                }}\n              ></input>\n              {/* <MaterialUIPickers change={handleDateChange} /> */}\n\n              <label className=\"label\">income</label>\n\n              <input\n                type=\"text\"\n                name=\"name\"\n                // placeholder=\"income\"\n                onChange={(e) => {\n                  setIncome(e.target.value);\n                }}\n              ></input>\n              <label className=\"label\">expense</label>\n\n              <input\n                type=\"text\"\n                name=\"name\"\n                // placeholder=\"expense\"\n                onChange={(e) => {\n                  setExpense(e.target.value);\n                }}\n              ></input>\n            </div>\n            <div className=\"butoncontainer\">\n              <button className=\"sub\" disabled={p} onClick={submitReview}>\n                submit\n              </button>\n            </div>\n            <Cardcomponent></Cardcomponent>\n            <div className=\"viewtabcontainer\">\n              <div>\n                <Link to=\"/weekly/7\">\n                  <button className=\"view\">WEEKLY CASH</button>\n                </Link>\n                <Link to=\"/netcash\">\n                  <button className=\"view\">NET CASH</button>\n                </Link>\n                <Link to=\"/monthly/30\">\n                  <button className=\"view\">MONTHLY CASH</button>\n                </Link>\n              </div>\n            </div>\n\n            {/* {movie} */}\n          </div>\n        </Route>\n        <Route path=\"/monthly/:id\" exact>\n          <CustomizedTables />\n        </Route>\n        <Route path=\"/weekly/:id\" exact>\n          {/* {movie} */}\n          {/* <Weeklyflow></Weeklyflow> */}\n          <CustomizedTabless />\n          {/* <EnhancedTable></EnhancedTable> */}\n        </Route>\n        <Route path=\"/netcash\" exact>\n          <CustomizedTablesss />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\weeklyExpense\\weeklyCashflow.js",["76","77"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./weeklycashflow.css\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  // return { name, calories, fat, carbs, protein };\r\n  //  return rows=[name, calories, fat, carbs, protein];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTabless() {\r\n  const classes = useStyles();\r\n  const [incomeList, setIncomelist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3005/api/moneyManager/getmoney\").then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setIncomelist(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n  // let movie = null;\r\n  let rows = [];\r\n\r\n  // rows = [\r\n  //\r\n  //   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  //   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  //   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  // createData(\"\", 356, 16.0, 49, 3.9),\r\n  // ];\r\n  //  {\r\n  let p = null;\r\n  p = incomeList.map((row, i) => {\r\n    return i + 1 <= 7 ? (\r\n      <StyledTableRow key={row.id}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n      </StyledTableRow>\r\n    ) : (\r\n      false\r\n    );\r\n  });\r\n  //  }\r\n\r\n  // let y =<h1></h1>\r\n  return (\r\n    <div className=\"monthly\">\r\n      <Link to=\"/\">\r\n        <button className=\"button\">BACK HOME</button>\r\n      </Link>\r\n      <div className=\"insideMonthly\">\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell></StyledTableCell>\r\n                <StyledTableCell align=\"right\">id</StyledTableCell>\r\n                <StyledTableCell align=\"right\">income Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\">expense Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\"> YYYY-MM-DD</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {incomeList.map((row, i) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))} */}\r\n              {p}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\datecomponent.js",[],"C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\monthlyExpense\\monthlyCashflow.js",["78","79"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./monthlyCashflow.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  // return { name, calories, fat, carbs, protein };\r\n  //  return rows=[name, calories, fat, carbs, protein];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n  const [incomeList, setIncomelist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3005/api/moneyManager/getmoney\").then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setIncomelist(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n  // let movie = null;\r\n  let rows = [];\r\n\r\n  // rows = [\r\n  //\r\n  //   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  //   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  //   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  // createData(\"\", 356, 16.0, 49, 3.9),\r\n  // ];\r\n  //  {\r\n  let p = null;\r\n  p = incomeList.map((row, i) => {\r\n    return i + 1 <= 31 ? (\r\n      <StyledTableRow key={row.id}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n      </StyledTableRow>\r\n    ) : (\r\n      false\r\n    );\r\n  });\r\n  //  }\r\n\r\n  // let y =<h1></h1>\r\n  return (\r\n    <div className=\"maincont\">\r\n      <div className=\"home\">\r\n        <Link to=\"/\">\r\n          <button className=\"button\">BACK HOME</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"monthly\">\r\n        <div className=\"insideMonthly\">\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell></StyledTableCell>\r\n                  <StyledTableCell align=\"right\">id</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">income Rs</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">expense Rs</StyledTableCell>\r\n                  <StyledTableCell align=\"right\"> YYYY-MM-DD</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/* {incomeList.map((row, i) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))} */}\r\n                {p}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\netCashFlow\\netCashflow.js",["80","81"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./netCashflow.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  // return { name, calories, fat, carbs, protein };\r\n  //  return rows=[name, calories, fat, carbs, protein];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTablesss() {\r\n  const classes = useStyles();\r\n  const [incomeList, setIncomelist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3005/api/moneyManager/getmoney\").then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setIncomelist(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n  // let movie = null;\r\n  let rows = [];\r\n\r\n  // rows = [\r\n  //\r\n  //   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  //   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  //   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  // createData(\"\", 356, 16.0, 49, 3.9),\r\n  // ];\r\n  //  {\r\n  let p = null;\r\n  p = incomeList.map((row, i) => {\r\n    return (\r\n      <StyledTableRow key={row.id}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n      </StyledTableRow>\r\n    );\r\n  });\r\n  //  }\r\n\r\n  let expense = incomeList.map((v, i) => {\r\n    // if (i <= 31) {\r\n    return v.expense;\r\n    // }\r\n  });\r\n  let income = incomeList.map((v, i) => {\r\n    // if (i <= 31) {\r\n    return v.income;\r\n    // }\r\n  });\r\n  console.log(expense);\r\n\r\n  let totalexpense = expense.reduce((a, d, i) => {\r\n    console.log(i);\r\n\r\n    return a + d;\r\n  }, 0);\r\n  let totalincome = income.reduce((a, d, i) => {\r\n    console.log(i);\r\n\r\n    return a + d;\r\n  }, 0);\r\n\r\n  // let y =<h1></h1>\r\n  return (\r\n    <div className=\"monthly\">\r\n      <div className=\"insideMonthly\">\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell></StyledTableCell>\r\n                <StyledTableCell align=\"right\">id</StyledTableCell>\r\n                <StyledTableCell align=\"right\">income Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\">expense Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\"> YYYY-MM-DD</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {incomeList.map((row, i) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))} */}\r\n              {p}\r\n              {/* </div> */}\r\n              {/* {p} */}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className=\"labelconatiner\">\r\n          <div>\r\n            <label> your total income</label>\r\n            <h3>{totalincome} rs</h3>\r\n          </div>\r\n\r\n          <div>\r\n            <label> your total expense</label>\r\n            <h3>{totalexpense} rs</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <button className=\"button\">BACK HOME</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n",["82","83"],"C:\\Users\\chethan\\Desktop\\ReactProject\\animall\\client\\src\\cardcomponent.js",[],"C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\index.js",[],["84","85"],"C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\App.js",["86","87","88","89","90"],"C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\cardcomponent.js",[],"C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\datecomponent.js",[],"C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\weeklyExpense\\weeklyCashflow.js",["91","92"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./weeklycashflow.css\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  // return { name, calories, fat, carbs, protein };\r\n  //  return rows=[name, calories, fat, carbs, protein];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTabless() {\r\n  const classes = useStyles();\r\n  const [incomeList, setIncomelist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://usingmongodb.herokuapp.com/moneyManager/getmoney\").then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setIncomelist(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n  // let movie = null;\r\n  let rows = [];\r\n\r\n  // rows = [\r\n  //\r\n  //   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  //   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  //   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  // createData(\"\", 356, 16.0, 49, 3.9),\r\n  // ];\r\n  //  {\r\n  let p = null;\r\n  p = incomeList.map((row, i) => {\r\n    return i + 1 <= 7 ? (\r\n      <StyledTableRow key={row.id}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n      </StyledTableRow>\r\n    ) : (\r\n      false\r\n    );\r\n  });\r\n  //  }\r\n\r\n  // let y =<h1></h1>\r\n  return (\r\n    <div className=\"monthly\">\r\n      <Link to=\"/\">\r\n        <button className=\"button\">BACK HOME</button>\r\n      </Link>\r\n      <div className=\"insideMonthly\">\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell></StyledTableCell>\r\n                <StyledTableCell align=\"right\">id</StyledTableCell>\r\n                <StyledTableCell align=\"right\">income Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\">expense Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\"> YYYY-MM-DD</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {incomeList.map((row, i) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))} */}\r\n              {p}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\monthlyExpense\\monthlyCashflow.js",["93","94"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./monthlyCashflow.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  // return { name, calories, fat, carbs, protein };\r\n  //  return rows=[name, calories, fat, carbs, protein];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n  const [incomeList, setIncomelist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://usingmongodb.herokuapp.com/moneyManager/getmoney\").then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setIncomelist(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n  // let movie = null;\r\n  let rows = [];\r\n\r\n  // rows = [\r\n  //\r\n  //   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  //   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  //   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  // createData(\"\", 356, 16.0, 49, 3.9),\r\n  // ];\r\n  //  {\r\n  let p = null;\r\n  p = incomeList.map((row, i) => {\r\n    return i + 1 <= 31 ? (\r\n      <StyledTableRow key={row.id}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n      </StyledTableRow>\r\n    ) : (\r\n      false\r\n    );\r\n  });\r\n  //  }\r\n\r\n  // let y =<h1></h1>\r\n  return (\r\n    <div className=\"maincont\">\r\n      <div className=\"home\">\r\n        <Link to=\"/\">\r\n          <button className=\"button\">BACK HOME</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"monthly\">\r\n        <div className=\"insideMonthly\">\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell></StyledTableCell>\r\n                  <StyledTableCell align=\"right\">id</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">income Rs</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">expense Rs</StyledTableCell>\r\n                  <StyledTableCell align=\"right\"> YYYY-MM-DD</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/* {incomeList.map((row, i) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))} */}\r\n                {p}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\chethan\\Desktop\\ReactProject\\third\\client\\src\\netCashFlow\\netCashflow.js",["95","96"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./netCashflow.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  // return { name, calories, fat, carbs, protein };\r\n  //  return rows=[name, calories, fat, carbs, protein];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTablesss() {\r\n  const classes = useStyles();\r\n  const [incomeList, setIncomelist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://usingmongodb.herokuapp.com/moneyManager/getmoney\").then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setIncomelist(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n  // let movie = null;\r\n  let rows = [];\r\n\r\n  // rows = [\r\n  //\r\n  //   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  //   createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  //   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  // createData(\"\", 356, 16.0, 49, 3.9),\r\n  // ];\r\n  //  {\r\n  let p = null;\r\n  p = incomeList.map((row, i) => {\r\n    return (\r\n      <StyledTableRow key={row.id}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n      </StyledTableRow>\r\n    );\r\n  });\r\n  //  }\r\n\r\n  let expense = incomeList.map((v, i) => {\r\n    // if (i <= 31) {\r\n    return v.expense;\r\n    // }\r\n  });\r\n  let income = incomeList.map((v, i) => {\r\n    // if (i <= 31) {\r\n    return v.income;\r\n    // }\r\n  });\r\n  console.log(expense);\r\n\r\n  let totalexpense = expense.reduce((a, d, i) => {\r\n    console.log(i);\r\n\r\n    return a + d;\r\n  }, 0);\r\n  let totalincome = income.reduce((a, d, i) => {\r\n    console.log(i);\r\n\r\n    return a + d;\r\n  }, 0);\r\n\r\n  // let y =<h1></h1>\r\n  return (\r\n    <div className=\"monthly\">\r\n      <div className=\"insideMonthly\">\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell></StyledTableCell>\r\n                <StyledTableCell align=\"right\">id</StyledTableCell>\r\n                <StyledTableCell align=\"right\">income Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\">expense Rs</StyledTableCell>\r\n                <StyledTableCell align=\"right\"> YYYY-MM-DD</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {incomeList.map((row, i) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.income}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.expense}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))} */}\r\n              {p}\r\n              {/* </div> */}\r\n              {/* {p} */}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className=\"labelconatiner\">\r\n          <div>\r\n            <label> your total income</label>\r\n            <h3>{totalincome} rs</h3>\r\n          </div>\r\n\r\n          <div>\r\n            <label> your total expense</label>\r\n            <h3>{totalexpense} rs</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <button className=\"button\">BACK HOME</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":15},{"ruleId":"101","severity":1,"message":"107","line":17,"column":3,"nodeType":"103","messageId":"104","endLine":17,"endColumn":12},{"ruleId":"101","severity":1,"message":"108","line":40,"column":3,"nodeType":"103","messageId":"104","endLine":40,"endColumn":8},{"ruleId":"101","severity":1,"message":"109","line":32,"column":10,"nodeType":"103","messageId":"104","endLine":32,"endColumn":20},{"ruleId":"101","severity":1,"message":"110","line":56,"column":7,"nodeType":"103","messageId":"104","endLine":56,"endColumn":11},{"ruleId":"101","severity":1,"message":"109","line":33,"column":10,"nodeType":"103","messageId":"104","endLine":33,"endColumn":20},{"ruleId":"101","severity":1,"message":"110","line":57,"column":7,"nodeType":"103","messageId":"104","endLine":57,"endColumn":11},{"ruleId":"101","severity":1,"message":"109","line":33,"column":10,"nodeType":"103","messageId":"104","endLine":33,"endColumn":20},{"ruleId":"101","severity":1,"message":"110","line":57,"column":7,"nodeType":"103","messageId":"104","endLine":57,"endColumn":11},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"97","replacedBy":"113"},{"ruleId":"99","replacedBy":"114"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":15},{"ruleId":"101","severity":1,"message":"107","line":17,"column":3,"nodeType":"103","messageId":"104","endLine":17,"endColumn":12},{"ruleId":"101","severity":1,"message":"108","line":40,"column":3,"nodeType":"103","messageId":"104","endLine":40,"endColumn":8},{"ruleId":"101","severity":1,"message":"109","line":32,"column":10,"nodeType":"103","messageId":"104","endLine":32,"endColumn":20},{"ruleId":"101","severity":1,"message":"110","line":56,"column":7,"nodeType":"103","messageId":"104","endLine":56,"endColumn":11},{"ruleId":"101","severity":1,"message":"109","line":33,"column":10,"nodeType":"103","messageId":"104","endLine":33,"endColumn":20},{"ruleId":"101","severity":1,"message":"110","line":57,"column":7,"nodeType":"103","messageId":"104","endLine":57,"endColumn":11},{"ruleId":"101","severity":1,"message":"109","line":33,"column":10,"nodeType":"103","messageId":"104","endLine":33,"endColumn":20},{"ruleId":"101","severity":1,"message":"110","line":57,"column":7,"nodeType":"103","messageId":"104","endLine":57,"endColumn":11},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'MaterialUIPickers' is defined but never used.","Identifier","unusedVar","'EnhancedTable' is defined but never used.","'Monthly' is defined but never used.","'useParams' is defined but never used.","'movie' is assigned a value but never used.","'createData' is defined but never used.","'rows' is assigned a value but never used.",["115"],["116"],["115"],["116"],"no-global-assign","no-unsafe-negation"]